##
# @description Application services (customizations for production)
# @author      Cristian Marcelo de Picciotto <d3p1@d3p1.dev>
# @note        This file is intended to be used as a personalization of the 
#              main/primary `docker-compose.yml`.
#              It must be used with the following command: 
#              `docker compose -f docker-compose.yml -f docker-compose.prod.yml up -d`
##
services:
  ##
  # @note Customize app service
  # @note Set production build mode
  # @note Add named volume to be able to persist app/site code 
  #       and to share it with the server
  ##
  app:
    build:
      args:
        - BUILD_MODE=production
    volumes:
      - blog:/app

  ##
  # @note Customize server service
  # @note Remember that named volumes are always initialized with the container 
  #       path content so, in this case, app/site code is mounted into 
  #       server location
  # @note It is added the certificate resolver (named `le-http`) 
  #       to generate the TLS certificates
  ##    
  server:
    volumes:
      - blog:${DOCUMENT_ROOT}
    labels:
      - traefik.http.routers.https-blog.tls.certresolver=le-http
  
  ##
  # @note Customize reverse proxy service
  # @note It is not added a redirection from HTTP to HTTPS because 
  #       the `HTTP-01` challenge uses HTTP
  # @note Add certificate resolver (named `le-http`) to be able to generate 
  #       Let's Encrypt certificates for the services
  # @note Remember to add Let's Encrypt email as an environment variable
  # @see  <project_root_dir>/.env` or `<project_root_dir>/.env.sample
  # @link https://doc.traefik.io/traefik/https/acme/
  ##
  reverse_proxy:
    environment:
      - TRAEFIK_CERTIFICATESRESOLVERS_LE-HTTP_ACME_EMAIL=${LETS_ENCRYPT_EMAIL}
      - TRAEFIK_CERTIFICATESRESOLVERS_LE-HTTP_ACME_STORAGE=/etc/traefik/acme.json
      - TRAEFIK_CERTIFICATESRESOLVERS_LE-HTTP_ACME_HTTPCHALLENGE_ENTRYPOINT=web

##
# @note Add volumes
# @note Add blog volume to persist builded site code
##
volumes:
  blog: