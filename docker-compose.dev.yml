##
# @description Application services (customizations for development)
# @author      Cristian Marcelo de Picciotto <d3p1@d3p1.dev>
# @note        This file is intended to be used as a personalization of the 
#              main/primary `docker-compose.yml`.
#              It must be used with the following command: 
#              `docker compose -f docker-compose.yml -f docker-compose.dev.yml up -d`
##
services:
  ##
  # @note Customize app service
  # @note We are going to build the image but targeting the build stage 
  #       to be able to interact with the site code
  # @note We mount our source code inside the service 
  #       to be able to update the site code
  # @note We mount the repository root instead of the service code folder 
  #       to be able to interact with the Git repository inside the container
  # @note We rewrite the build default command 
  #       to be able to listen for site code changes
  # @note It is added a health check script 
  #       to be able to only start the server when the site code 
  #       is already builded 
  # @note If there is not a folder `/srv/jekyll/app/_site` 
  #       when the server starts, an error is dispatched
  # @note Having the `app` service and the `server` service as a
  #       separate services, allow us to implement 
  #       an environment closer to production with a live server reload feature
  # @see  <project_root_dir>/app/.devcontainer.json
  ##
  app:
    build:
      context: 
        ./app
      target: 
        build
    volumes:
      - .:/srv/jekyll
    command:
      bundle exec jekyll build --config _config.yml,_config.env.yml --watch
    healthcheck:
      test: bash -c "[ -d /srv/jekyll/app/_site ]"
      interval: 1s
      timeout: 5s
      retries: 5
      start_period: 5s

  ##
  # @note Customize server service
  # @note Add generated site code from source code as volume
  ##    
  server:
    volumes:
      - ./app/_site:${DOCUMENT_ROOT}
    depends_on:
      app:
        condition: 
          service_healthy